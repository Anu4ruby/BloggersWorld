{"ts":1368414095014,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# def method_name [( [arg [= default]]...[, * arg [, &expr ]])]\n#   expr..\n# end\n\n# def method_name\n#   expr..\n# end\n\n# def method_name (var1, var2)\n#   expr..\n# end\n\n# def method_name (var1=value1, var2=value2)\n#   expr..\n# end\n\n# method_name\n\n# method_name 25, 30\n\ndef test(a1=\"Ruby\", a2=\"Perl\")\n  puts \"The programming language is #{a1}\"\n  puts \"The programming language is #{a2}\"\nend\ntest \"C\", \"C++\"\ntest\n\ndef hello(name, *args, address)\n  p name\n  p args\n  p address\n  return 1,2,3\nend\n\nhi = hello('gourav', 1,2,3,4, 'NYC')\np hi.to_s\np hi.class\n\n# undef hello\n# def hello\n#   p 'hiiii'\n# end\n  \n# hello\n\n# # alias new_name old_name\n# alias new_test test \n# new_test\n# test\n# sequence of params evaluation??? \n# Left to right like C or right to left like Pascal? The answer is Left to right\ndef param_sequence(a=9, b=a+1)  \n [a,b]\nend  \n\nputs param_sequence # displays 9, 10 \n\n# params passed by value or reference?\n\ndef capcase(string)  \n string.upcase\nend  \na = \"hello\"  \ncapcase(a)      # -> \"HELLO\"  \nputs a         # -> \"hello\"  \n\ndef capcase(string)  \n string.upcase!  \nend  \n\na = \"hello\"  \ncapcase(a)      # -> \"HELLO\"  \nputs a         # -> \"HELLO\" \n\n\n# http://rubylearning.com/satishtalim/ruby_names.html\n# http://rubylearning.com/satishtalim/writing_own_ruby_methods.html"]],"start1":0,"start2":0,"length1":0,"length2":1284}]],"length":1284}
{"contributors":[],"silentsave":false,"ts":1368418225405,"patch":[[{"diffs":[[0,"dress\n  "],[1,"#"],[0,"return 1"]],"start1":466,"start2":466,"length1":16,"length2":17}]],"length":1285,"saved":false}
{"ts":1368418441439,"patch":[[{"diffs":[[0,"n 1,2,3\n"],[1,"  return name\n"],[0,"end\n\nhi "]],"start1":480,"start2":480,"length1":16,"length2":30}]],"length":1299,"saved":false}
{"ts":1368418674984,"patch":[[{"diffs":[[0,".class\n\n"],[-1,"#"],[0," undef h"]],"start1":558,"start2":558,"length1":17,"length2":16},{"diffs":[[0,"f hello\n"],[-1,"#"],[0," def hel"]],"start1":571,"start2":571,"length1":17,"length2":16},{"diffs":[[0,"f hello\n"],[-1,"#"],[0,"   p 'hi"]],"start1":582,"start2":582,"length1":17,"length2":16},{"diffs":[[0,"ii'\n"],[-1,"#"],[0," end\n  \n"],[-1,"#"],[0," hel"]],"start1":599,"start2":599,"length1":18,"length2":16},{"diffs":[[0,"ld_name\n"],[-1,"#"],[0," alias n"]],"start1":639,"start2":639,"length1":17,"length2":16},{"diffs":[[0,"t test \n"],[-1,"#"],[0," new_tes"]],"start1":661,"start2":661,"length1":17,"length2":16},{"diffs":[[0,"ew_test\n"],[-1,"#"],[0," test\n# "]],"start1":671,"start2":671,"length1":17,"length2":16}]],"length":1291,"saved":false}
